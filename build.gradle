/*
  This build file was auto generated by running the Gradle 'init' task
 * by 'william' at '03/01/18 18:46' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

group 'com.williambl'
version '0.1-SNAPSHOT'

import org.gradle.internal.os.OperatingSystem

buildscript {
    ext {
        kotlinVersion = '1.2.0'
        lwjglVersion = '3.1.5'
        jomlVersion = '1.9.7'

        switch (OperatingSystem.current()) {
            case OperatingSystem.WINDOWS:
                lwjglNatives = "natives-windows"
                break
            case OperatingSystem.LINUX:
                lwjglNatives = "natives-linux"
                break
            case OperatingSystem.MAC_OS:
                lwjglNatives = "natives-macos"
                break
        }
    }

    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'kotlin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"

    compile "org.joml:joml:${jomlVersion}"

    compile "org.lwjgl:lwjgl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-assimp:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-bgfx:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-nanovg:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-nuklear:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-par:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-vulkan:${lwjglVersion}"
    compile "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-assimp:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-bgfx:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-nanovg:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-nuklear:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-openal:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-par:${lwjglVersion}:${lwjglNatives}"
    compile "org.lwjgl:lwjgl-stb:${lwjglVersion}:${lwjglNatives}"
}

jar {
    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes (
            "Main-Class": "main.kotlin.com.williambl.MainKt"
        )
    }
}

